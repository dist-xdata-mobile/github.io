(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{444:function(a,s,e){"use strict";e.r(s);var r=e(6),t=Object(r.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"代码规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码规范"}},[a._v("#")]),a._v(" 代码规范")]),a._v(" "),e("blockquote",[e("p",[a._v("作者：于佳鑫")])]),a._v(" "),e("h2",{attrs:{id:"阿里巴巴规约"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#阿里巴巴规约"}},[a._v("#")]),a._v(" 阿里巴巴规约")]),a._v(" "),e("p",[a._v("我们主要采用的是"),e("a",{attrs:{href:"https://github.com/alibaba/p3c/blob/master/Java%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C%EF%BC%88%E5%B5%A9%E5%B1%B1%E7%89%88%EF%BC%89.pdf",target:"_blank",rel:"noopener noreferrer"}},[a._v("阿里巴巴规约"),e("OutboundLink")],1),a._v("，请熟读并理解每条的确切含义。")]),a._v(" "),e("h2",{attrs:{id:"采用的工程架构模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#采用的工程架构模型"}},[a._v("#")]),a._v(" 采用的工程架构模型")]),a._v(" "),e("h3",{attrs:{id:"_1、如何分层"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、如何分层"}},[a._v("#")]),a._v(" 1、如何分层")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/13787512-bc114ba80c2b0e6b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"p3c规范中的分层模型"}})]),a._v(" "),e("p",[a._v("本系统采用的分层结构与 p3c 规范中的基本相同。")]),a._v(" "),e("h4",{attrs:{id:"dao-层"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dao-层"}},[a._v("#")]),a._v(" Dao 层")]),a._v(" "),e("p",[a._v("数据访问对象（Data Access Object），用于对数据库进行访问，负责数据的 CURD。")]),a._v(" "),e("p",[a._v("当然 Dao 不仅限于与数据库进行交互，假如日后系统引入的 ElasticSearch、Mongo 甚至 Redis，我认为都可以定义一个 Dao 对其进行访问。")]),a._v(" "),e("p",[a._v("这样的定义，可以将数据的 CURD 和业务逻辑进行分离。")]),a._v(" "),e("h4",{attrs:{id:"manager-层"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#manager-层"}},[a._v("#")]),a._v(" Manager 层")]),a._v(" "),e("p",[a._v("p3c 规范中对其定义如下：")]),a._v(" "),e("ol",[e("li",[e("strong",[a._v("对第三方平台封装")]),a._v("的层，"),e("strong",[a._v("预处理返回结果及转化异常信息")])]),a._v(" "),e("li",[e("strong",[a._v("对 Service 层通用能力的下沉")]),a._v("，如缓存方案、中间件通用处理")]),a._v(" "),e("li",[a._v("与 DAO 层交互，"),e("strong",[a._v("对多个 DAO 的组合复用")])])]),a._v(" "),e("p",[a._v("由这个定义并结合我们的系统，可以得出 Manager 层主要作用为：")]),a._v(" "),e("ol",[e("li",[a._v("可以通过 Manager 层调用第三方服务（指标系统、全文检索服务，因为他们是基础服务，所以不要在 web 层调用他们），对返回结果进行简单的处理之后返回 Service 层。")]),a._v(" "),e("li",[a._v("如果需要对基础服务进行调用，并将其结果处理后入库（例如：档案管理系统、模型系统）这种用法时，直接通过 Dao 层进行保存。")]),a._v(" "),e("li",[a._v("可以将 Manager 理解为对通用逻辑的封装，避免 Service 与 Service 进行相互调用，以及对通用逻辑的管理。\n"),e("blockquote",[e("p",[a._v("在开发中，我们经常会遇到 AService 中的某个业务可以提供给 BService 调用，从而让 BService 调用 AService 的方法，认为是 Service 之间具有共同的业务。其实 Service 之间没有共同的业务，而是具备通用的逻辑，这时应该将其抽离出来放在 Manager 中。无论何种工程架构都好，我都不赞同 Service 与 Service 之间的相互调用。")])])]),a._v(" "),e("li",[a._v("如果 2 个（或 2 个以上）表之间有一定的关联关系（一对多、多对多）并经常一起使用，则通过一个 Manager 对他们进行访问。")]),a._v(" "),e("li",[a._v("可以在这层加入缓存（当然我们体量小，一般只在 service 层加缓存），与我上面所说的为操作 Redis 定义对 Dao 进行访问。")])]),a._v(" "),e("h4",{attrs:{id:"service-层"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#service-层"}},[a._v("#")]),a._v(" Service 层")]),a._v(" "),e("p",[a._v("对具体对业务逻辑进行操作（复用性很低），由于我们使用的是 dubbo，Service 层可能会被其他人调用，所以最好还是做一下参数校验（hibernate validate）")]),a._v(" "),e("p",[a._v("从 p3c 规范来看，如果不用 Manager 层来对多个 Dao 进行组合，那么 Service 层可以直接与 Dao 进行交互，但是这样会给人一种很混乱对感觉，所以我们定义：")]),a._v(" "),e("p",[a._v("Service 对数据库进行操作时，必须通过 Manager 层，其实这也是为日后开发可能遇到对问题留有余地；如果我们使用 Redis 做 Service 层缓存的话，那么可以直接调用对应 Redis 的 Dao。")]),a._v(" "),e("h4",{attrs:{id:"web-层"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#web-层"}},[a._v("#")]),a._v(" Web 层")]),a._v(" "),e("p",[a._v("web 层只做简单对参数校验，或者简单对业务处理等（例如：查询审查任务实体，但是前端只需要部分字段，进行转换的工作）；Web 层与 Service 层一一对应。")]),a._v(" "),e("h3",{attrs:{id:"_2、分层领域对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、分层领域对象"}},[a._v("#")]),a._v(" 2、分层领域对象")]),a._v(" "),e("p",[a._v("本系统采用对模型为贫血领域模型，p3c 规范定义对数据传输对象过多，这样就导致了一个对象可能会出现 3 次甚至 4 次转换在一次请求中，当返回的时候同样也会出现 3-4 次转换，这样有可能一次完整的“请求-返回”会出现很多次对象转换。如果在开发中真的按照这么来，恐怕就别写其他的了，一天就光写这个重复无用的逻辑算了吧，所以我们只定义了几个对象。")]),a._v(" "),e("blockquote",[e("p",[a._v("贫血领域模型中对象只作为数据载体，只有 getter/setter 方法，而不包含业务方法。")])]),a._v(" "),e("h4",{attrs:{id:"do-data-object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#do-data-object"}},[a._v("#")]),a._v(" DO(Data Object)")]),a._v(" "),e("p",[a._v("数据对象，对数据源数据的映射，如数据库表，ElasticSearch 索引的数据结构。所在包一般命名为 data 。")]),a._v(" "),e("h4",{attrs:{id:"dto-data-transfer-object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dto-data-transfer-object"}},[a._v("#")]),a._v(" DTO(Data Transfer Object)")]),a._v(" "),e("p",[a._v("数据传输对象，业务层向外传输的对象。如果在"),e("strong",[a._v("某个业务中需要多次查询获取不同的数据对象")]),a._v("，最后将会把这多个数据对象组合成一个 DTO 并对外传输。所在包命名为 dto 。")]),a._v(" "),e("h4",{attrs:{id:"vo-view-object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vo-view-object"}},[a._v("#")]),a._v(" VO(View Object)")]),a._v(" "),e("p",[a._v("显示层对象，通常是 Web 向模板渲染引擎层传输的对象。现在的项目多数为前后端分离，后端只需要返回 JSON ，那么可以理解为 JSON 即是需要渲染成的“模板”。我一般会将这类对象命名为 xxxResponse ，所在包命名为 response。")]),a._v(" "),e("h4",{attrs:{id:"query"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#query"}},[a._v("#")]),a._v(" Query")]),a._v(" "),e("p",[a._v("数据查询对象，数据查询对象，各层接收上层的查询请求。")]),a._v(" "),e("p",[a._v("其实一般用于 Controller 接受传过来的参数，可以将其都命名为 xxxQuery，而我个人习惯将放在 request body 的参数（即 @RequestBody）包装为 xxxRequest ，而如果使用表单传输过来的参数（即 @RequestParam）包装为 xxxForm ，并分别放在包 request 和包 form 下。")]),a._v(" "),e("p",[a._v("注：web 层向 service 层传输对 query 对象，绝对不能传输到 Manager 层，因为 Manager 层是"),e("strong",[a._v("通用的逻辑")]),a._v("。")]),a._v(" "),e("h4",{attrs:{id:"层间对象传递"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#层间对象传递"}},[a._v("#")]),a._v(" 层间对象传递")]),a._v(" "),e("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://upload-images.jianshu.io/upload_images/13787512-bbf40d5098e94dbe.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"领域对象在不同层之间的传递"}}),a._v(" "),e("p",[a._v("其中 DTO 如果不可复用，那么可以直接传输给前端。")]),a._v(" "),e("h3",{attrs:{id:"_3、包结构及其含义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、包结构及其含义"}},[a._v("#")]),a._v(" 3、包结构及其含义")]),a._v(" "),e("blockquote",[e("p",[a._v("以辅助审查系统为例")])]),a._v(" "),e("p",[a._v("辅助审查服务模块包设计")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("x5456deMBP:dgp-dubbo-server-root x5456$ tree dgp-ars-server-service/src -d -L 8\ndgp-ars-server-service/src\n├── main\n│   ├── java\n│   │   └── com\n│   │       └── dist\n│   │           └── ars\n│   │               ├── aop\n│   │               ├── config\n│   │               ├── dao\n│   │               ├── manager\n│   │               │   └── remote\n│   │               │        ├── ams\n│   │               │        ├── ims\n│   │               │        ├── mms\n│   │               │        ├── pms\n│   │               │        └── sms\n│   │               └── service\n│   └── resources\n│       ├── META-INF\n│       │   ├── dubbo\n│       │   └── services\n│       ├── config\n│       ├── db\n│       │   ├── oracle\n│       │   │   ├── create\n│       │   │   └── update\n│       │   └── pg\n│       │       └── create\n│       └── libs\n└── test\n    └── java\n        └── com\n            └── dist\n                └── ars\n                    ├── service\n                    └── manager\n\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br"),e("span",{staticClass:"line-number"},[a._v("21")]),e("br"),e("span",{staticClass:"line-number"},[a._v("22")]),e("br"),e("span",{staticClass:"line-number"},[a._v("23")]),e("br"),e("span",{staticClass:"line-number"},[a._v("24")]),e("br"),e("span",{staticClass:"line-number"},[a._v("25")]),e("br"),e("span",{staticClass:"line-number"},[a._v("26")]),e("br"),e("span",{staticClass:"line-number"},[a._v("27")]),e("br"),e("span",{staticClass:"line-number"},[a._v("28")]),e("br"),e("span",{staticClass:"line-number"},[a._v("29")]),e("br"),e("span",{staticClass:"line-number"},[a._v("30")]),e("br"),e("span",{staticClass:"line-number"},[a._v("31")]),e("br"),e("span",{staticClass:"line-number"},[a._v("32")]),e("br"),e("span",{staticClass:"line-number"},[a._v("33")]),e("br"),e("span",{staticClass:"line-number"},[a._v("34")]),e("br"),e("span",{staticClass:"line-number"},[a._v("35")]),e("br"),e("span",{staticClass:"line-number"},[a._v("36")]),e("br"),e("span",{staticClass:"line-number"},[a._v("37")]),e("br"),e("span",{staticClass:"line-number"},[a._v("38")]),e("br")])]),e("p",[a._v("辅助审查 Api 模块包设计")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("tree dgp-ars-server-api/src -d -L 8\ndgp-ars-server-api/src\n└── main\n    └── java\n        └── com\n            └── dist\n                └── ars\n                    ├── constants\n                    ├── exceptions\n                    ├── helper      # web层与service共用的辅助类\n                    ├── model\n                    │   ├── dto\n                    │   ├── entity\n                    │   ├── query\n                    │   │   ├── request\n                    │   │   ├── form\n                    │   │   ├── webQuery        # 由web层封装向service层传输的查询对象\n                    │   │   └── commonQuery     # 由service层封装传输到Manager层的通用查询对象\n                    │   └── vo\n                    └── service\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br")])]),e("h4",{attrs:{id:"helper-包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#helper-包"}},[a._v("#")]),a._v(" helper 包")]),a._v(" "),e("p",[a._v("开发中会遇到一些很基础的，通用的业务逻辑，例如我们可能会根据每个用户的信息生成一个唯一的 account id 。又或者说有一个用户排名的需求，我们将从用户的相关信息中计算出一个分数，从而根据这个分数进行排名。那么这时候我们可能会将这些逻辑写在 User 数据对象或是其他相应对应的数据对象下。")]),a._v(" "),e("p",[a._v("由于我们采用的是贫血领域模型，"),e("strong",[a._v("数据对象中不应该包含业务逻辑")]),a._v("，所以我们将这些通用的业务逻辑都抽出来，放到 helper 包中进行统一管理。如会将生成 account id 的逻辑放在 AccountIdGenerator 中，将计算排名分数的逻辑放在 RankCalculator 中。")]),a._v(" "),e("p",[a._v("我将这些类都归为 Helper ，用于提供底层的业务计算逻辑。而为什么不放在通用工具层中呢？因为"),e("strong",[a._v("这些 Helper 其实都是依赖于特定的领域，即特定的业务")]),a._v("。而"),e("strong",[a._v("通用工具类则是业务无关的")]),a._v("，任何系统，只要有需要都可以引用。")]),a._v(" "),e("h2",{attrs:{id:"git-提交规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-提交规范"}},[a._v("#")]),a._v(" GIT 提交规范")]),a._v(" "),e("img",{staticStyle:{zoom:"67%"},attrs:{src:"http://elb-791125809.cn-northwest-1.elb.amazonaws.com.cn:5335//fellow-travellers/picgorepo/uploads/02e49dc2cf010f2fd8a1334c4d051c0c/git提交规范.png",alt:"git提交规范"}})])}),[],!1,null,null,null);s.default=t.exports}}]);